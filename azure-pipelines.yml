trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

stages:
# --- Build stage ---
- stage: Build
  displayName: Build and Package
  jobs:
  - job: BuildJob
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '8.0.x'

    - task: DotNetCoreCLI@2
      displayName: 'Restore packages'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Build project'
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Publish Blazor Server App'
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'drop'

# --- Deploy stage ---
- stage: Deploy
  displayName: Deploy to Azure App Service
  dependsOn: Build
  jobs:
  - deployment: WebDeploy
    environment: production
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
          - task: AzureWebApp@1
            displayName: 'Deploy Blazor zip'
            inputs:
              azureSubscription: 'AzureSPN'
              appType: 'webApp'
              appName: 'ekg-webapp'  # exakt namn p√• din App Service
              package: $(Pipeline.Workspace)/drop/**/*.zip
